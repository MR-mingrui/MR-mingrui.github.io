<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>更换网站主题</title>
      <link href="/2021/11/21/%E6%9B%B4%E6%8D%A2%E7%BD%91%E7%AB%99%E4%B8%BB%E9%A2%98/"/>
      <url>/2021/11/21/%E6%9B%B4%E6%8D%A2%E7%BD%91%E7%AB%99%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="进入官网"><a href="#进入官网" class="headerlink" title="进入官网"></a>进入官网</h1><ul><li><a href="https://hexo.bootcss.com/">官网</a>:点击主题</li><li>选择一款喜欢的主题，根据主题内的教程进行下载</li><li>下载完毕后进入在blog根目录配置文件(_config.yml)中进行如下修改<code>theme: 下载主题的名字 </code></li><li>经典三件套：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d </code></li><li>主题配置：进入blog目录下的theme文件夹，找到主题的(_config.yml)文件，根据你下载主题的教程进行相关修改</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>更改部署到Gitee</title>
      <link href="/2021/11/21/%E6%9B%B4%E6%94%B9%E9%83%A8%E7%BD%B2%E5%88%B0Gitee/"/>
      <url>/2021/11/21/%E6%9B%B4%E6%94%B9%E9%83%A8%E7%BD%B2%E5%88%B0Gitee/</url>
      
        <content type="html"><![CDATA[<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p>注：若你已部署过GitHub，那么可直接观看本博客</p><h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><ul><li>登录 gitee 账号，新建一个空仓库，可以直接从github导入（注：名字一定要使用<code>账号昵称.github.io </code>的格式）</li><li>记录仓库地址，后面要用</li><li>在仓库的services选项中开启仓库的Pages服务</li></ul><h2 id="添加密匙"><a href="#添加密匙" class="headerlink" title="添加密匙"></a>添加密匙</h2><ul><li>复制密匙：打开<code>id_rsa.pub </code>复制所有内容，文件路径是刚刚提到的：<code>根目录/../../.s sh </code>，每个人用户名都不一样，所以路径我使用<code>.. </code>代替。</li><li>绑定密匙：打开 gitee，点开用户头像，点击 个人主页，点开仓库，点击管理，找到部署公钥，添加公钥 。将刚刚复制的内容放入指定位置</li></ul><h2 id="修改Hexo配置文件-config-yml"><a href="#修改Hexo配置文件-config-yml" class="headerlink" title="修改Hexo配置文件_config.yml "></a>修改Hexo配置文件<code>_config.yml </code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#repo: ’github 仓库地址’</span><br><span class="line">repo: ’gitee 仓库地址’</span><br></pre></td></tr></table></figure><h2 id="部署推送到Gitee"><a href="#部署推送到Gitee" class="headerlink" title="部署推送到Gitee"></a>部署推送到Gitee</h2><p>经典三件套：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d </code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>live2d网页动漫人物</title>
      <link href="/2021/11/21/live2d%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/"/>
      <url>/2021/11/21/live2d%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="人物插件安装与使用"><a href="#人物插件安装与使用" class="headerlink" title="人物插件安装与使用"></a>人物插件安装与使用</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p><code>npm i --save hexo-helper-live2d </code></p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>安装模型插件：<code>npm install live2d-widget-model-shizuku </code></p><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>在blog根目录配置文件(_config.yml)中添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true </span><br><span class="line">  scriptFrom: local </span><br><span class="line">  pluginRootPath: live2dw/ </span><br><span class="line">  pluginJsPath: lib/ </span><br><span class="line">  pluginModelPath: assets/ </span><br><span class="line">  tagMode: false </span><br><span class="line">  log: false </span><br><span class="line">  model: </span><br><span class="line">    use: live2d-widget-model-shizuku #更换模型需要在这里进行修改</span><br><span class="line">  display: </span><br><span class="line">    position: right </span><br><span class="line">    width: 150 </span><br><span class="line">    height: 300 </span><br><span class="line">  mobile: </span><br><span class="line">    show: true </span><br><span class="line">  react: </span><br><span class="line">    opacity: 0.7</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第四步（可跳过）"><a href="#第四步（可跳过）" class="headerlink" title="第四步（可跳过）"></a>第四步（可跳过）</h2><p>查看已安装插件：<code>npm list </code></p><p>安装模型：<code>npm install packagename </code></p><p>卸载模型：<code>npm uninstall packagename </code></p><p>更换模型：修改第三步中的配置文件</p><p>packgename:</p><ul><li><code>live2d-widget-model-chitose</code></li><li><code>live2d-widget-model-epsilon2_1</code></li><li><code>live2d-widget-model-gf</code></li><li><code>live2d-widget-model-haru/01</code>（使用<code>npm install --save live2d-widget-model-haru</code>）</li><li><code>live2d-widget-model-haru/02</code>（使用<code>npm install --save live2d-widget-model-haru</code>）</li><li><code>live2d-widget-model-haruto</code></li><li><code>live2d-widget-model-hibiki</code></li><li><code>live2d-widget-model-hijiki</code></li><li><code>live2d-widget-model-izumi</code></li><li><code>live2d-widget-model-koharu</code></li><li><code>live2d-widget-model-miku</code></li><li><code>live2d-widget-model-ni-j</code></li><li><code>live2d-widget-model-nico</code></li><li><code>live2d-widget-model-nietzsche</code></li><li><code>live2d-widget-model-nipsilon</code></li><li><code>live2d-widget-model-nito</code></li><li><code>live2d-widget-model-shizuku</code></li><li><code>live2d-widget-model-tororo</code></li><li><code>live2d-widget-model-tsumiki</code></li><li><code>live2d-widget-model-unitychan</code></li><li><code>live2d-widget-model-wanko</code></li><li><code>live2d-widget-model-z16</code></li></ul><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><p>部署本地查看效果：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s </code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GitHub部署博客</title>
      <link href="/2021/11/16/GitHub%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/11/16/GitHub%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><ul><li>登录 github 账号，新建一个空仓库（注：名字一定要使用<code>账号昵称.github.io </code>的格式）</li><li>记录仓库地址，后面要用</li></ul><h1 id="部署到-GitHub-（使用-Git-Bash-）"><a href="#部署到-GitHub-（使用-Git-Bash-）" class="headerlink" title="部署到 GitHub （使用 Git Bash ）"></a>部署到 GitHub （使用 Git Bash ）</h1><ul><li><p>安装git部署插件：<code>cnpm install --save hexo-deployer-git </code></p></li><li><p>修改站点配置文件<code>_config.yml </code>，到文件的最底部，补全如下内容：（注意空格）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">      type: ‘git’</span><br><span class="line">      repo: ’github 仓库地址’</span><br><span class="line">      branch: ‘master’</span><br></pre></td></tr></table></figure></li><li><p>绑定github：</p><ul><li>生成密匙：<code>ssh-keygen -t rsa  </code>，记住过程中 Enter file in which to save the key 后面的路径<code>根目录/../../.ssh </code></li><li>复制密匙：打开<code>id_rsa.pub </code>复制所有内容，文件路径是刚刚提到的：<code>根目录/../../.s sh </code>，每个人用户名都不一样，所以路径我使用<code>.. </code>代替。</li><li>绑定密匙：打开 github，点开用户头像展开，点击 Settings，找到SSH and GPG keys，New 一个 key 。将刚刚复制的内容放入  SSH keys 里，标题随意。</li><li>连接到 github：<code>ssh -T git@github.com </code>，输入 yes 确定连接</li><li>初始化 git：设置git邮箱<code>git config --global user.email 电子邮箱 </code>，设置git名字<code>git config --global user.name 名字 </code></li></ul></li><li><p>部署到远端：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d </code></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建本地博客</title>
      <link href="/2021/11/16/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/11/16/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><ul><li><a href="https://nodejs.org/en/">官网</a>下载：LTS</li><li>查询 node 和 npm 的版本：<code>node -v </code>，<code>npm -v </code></li><li>更换阿里源：<code>npm install -g cnpm --registry=//registry.npm.taobao.org </code></li></ul><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><ul><li>安装 hexo：<code>cnpm install -g hexo-cli </code></li><li>查询 hexo 版本：<code>hexo -v </code></li></ul><h2 id="Git（为后面部署到github准备）"><a href="#Git（为后面部署到github准备）" class="headerlink" title="Git（为后面部署到github准备）"></a>Git（为后面部署到github准备）</h2><ul><li><a href="https://git-scm.com/download/win">下载 Git </a>：疯狂 next，期间有一个选项选择 Use Git from Git Bash only</li><li>从此刻开始，命令行转到 Git Bash 操作，原因：安装git附送的终端，比cmd终端好用，可以使用linux语法</li></ul><h1 id="搭建并部署到本地"><a href="#搭建并部署到本地" class="headerlink" title="搭建并部署到本地"></a>搭建并部署到本地</h1><ul><li><p>新建一个文件夹 blog：<code>mkdir blog </code></p></li><li><p>初始化 hexo：<code>hexo init </code></p></li><li><p>新建一篇博客：<code>hexo n &quot;博客名&quot; </code>，新建完成后会显示出博客的地址，可以直接去想应地址进行修改保存后再部署</p></li><li><p>部署博客到本地：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s </code></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">`hexo cl ` #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">`hexo g ` #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写) </span><br><span class="line">`hexo d ` #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写) </span><br><span class="line">`hexo s `# server 启动本地服务器 localhost:4000即可访问</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
